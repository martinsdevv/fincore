version: '3.8'

services:
  # --- Banco de Dados PostgreSQL ---
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fincore
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volume para persistir dados

  # --- Cache (conforme seu plano) ---
  cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data # Volume para persistir dados

  # --- API Backend (Go) ---
  api:
    build:
      context: ./api         # <-- MUITO IMPORTANTE: Contexto é a pasta da API
      dockerfile: Dockerfile # Opcional, pois é o nome padrão
    ports:
      - "8080:8080"
    environment:
      # Variáveis para sua API Go se conectar aos outros serviços
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: fincore
      REDIS_ADDR: "cache:6379"
      # Adicione outras variáveis que sua API precisar (ex: JWT_SECRET)
    depends_on:
      - db      # A API só inicia depois que o DB estiver pronto
      - cache   # A API só inicia depois que o Cache estiver pronto

  # --- Frontend (Angular) ---
  web:
    build:
      context: ./web         # <-- MUITO IMPORTANTE: Contexto é a pasta do Web
      dockerfile: Dockerfile
    ports:
      - "80:80"              # Expõe o Nginx na porta 80
    depends_on:
      - api                  # Opcional, mas garante a ordem de subida

# --- Volumes Persistentes ---
# Define os volumes nomeados para persistência
volumes:
  postgres_data:
  redis_data:
