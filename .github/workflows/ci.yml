name: Go CI/CD para Fincore API

on:
  push:
    branches:
      - main
  
  pull_request:
    branches:
      - main
    
    paths:
      - 'api/**'

jobs:

  build-and-test:
    name: Build & Teste
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24-5'
      
      - name: Set Working Directory
        run: echo "WORK_DIR=./api" >> $GITHUB_ENV

      
      - name: Install Dependencies
        run: go mod tidy
        working-directory: ${{ env.WORK_DIR }}

      
      - name: Run Linter
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run
        working-directory: ${{ env.WORK_DIR }}

      - name: Rodar Testes Unit√°rios
        run: go test -v -race ./...
        working-directory: ${{ env.WORK_DIR }}

  
  
  build-and-push-docker:
    name: Build & Push
    runs-on: ubuntu-latest
    
    
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      
      - name: Checkout code
        uses: actions/checkout@v4

      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} 

      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./api 
          file: ./api/Dockerfile 
          push: true 
          tags: |
            ghcr.io/${{ github.repository_owner }}/fincore-api:latest
            ghcr.io/${{ github.repository_owner }}/fincore-api:${{ github.sha }}
          
          cache-from: type=gha
          cache-to: type=gha,mode=max